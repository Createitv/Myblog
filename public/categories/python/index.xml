<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>python - 分类 - 且慢</title>
        <link>http://www.longtermbook.com/categories/python/</link>
        <description>python - 分类 - 且慢</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 03 Oct 2021 12:22:31 &#43;0800</lastBuildDate><atom:link href="http://www.longtermbook.com/categories/python/" rel="self" type="application/rss+xml" /><item>
    <title>Yaml介绍</title>
    <link>http://www.longtermbook.com/posts/yaml%E4%BB%8B%E7%BB%8D/</link>
    <pubDate>Sun, 03 Oct 2021 12:22:31 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/yaml%E4%BB%8B%E7%BB%8D/</guid>
    <description><![CDATA[参考 http://www.ruanyifeng.com/blog/2016/07/yaml.html 菜鸟yaml教程 什么是yaml？ YAML 是 &ldquo;YAML Ain&rsquo;t a Markup Language&rdquo;（YAML 不是一种标记语言）的递归缩写。在开发的这种语言时，]]></description>
</item><item>
    <title>Python异步性能对比</title>
    <link>http://www.longtermbook.com/posts/python%E5%BC%82%E6%AD%A5%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94/</link>
    <pubDate>Sat, 04 Sep 2021 14:35:24 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/python%E5%BC%82%E6%AD%A5%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94/</guid>
    <description><![CDATA[为什么出现异步编程 通常来说，程序都是顺序执行，同一时刻只会发生一件事。如果一个函数依赖于另一个函数的结果，它只能等待那个函数结束才能继续执行]]></description>
</item><item>
    <title>Environs库</title>
    <link>http://www.longtermbook.com/posts/environs/</link>
    <pubDate>Thu, 02 Sep 2021 21:31:55 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/environs/</guid>
    <description><![CDATA[系统环境变量配置 设置Windows PowerShell环境变量 1 2 $env:Path +=&#34;;C:\Program Files\GnuWin32\bin&#34; $env:string=&#34;a string&#34; 查看Windows PowerShell环境变量 1 $env:NUMBER_OF_PROCESSORS. # 查看系统CP]]></description>
</item><item>
    <title>__Del__和__delete__</title>
    <link>http://www.longtermbook.com/posts/__del__%E5%92%8C__delete__/</link>
    <pubDate>Thu, 02 Sep 2021 17:02:25 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/__del__%E5%92%8C__delete__/</guid>
    <description><![CDATA[Both __delete__ and __del__ are dunder or magic methods in Python. Dunder or magic methods in Python are the methods having two prefix and suffix underscores in the method name. Dunder here means “Double Under (Underscores)”. These are commonly used for operator overloading. del __del__ is a destructor method which]]></description>
</item><item>
    <title>异步编程</title>
    <link>http://www.longtermbook.com/posts/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</link>
    <pubDate>Tue, 27 Jul 2021 11:08:19 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B/</guid>
    <description><![CDATA[1. 异步编程介绍 除了顺序执行和并行执行的模型之外，还有第三种模型，叫做异步模型，这是事件驱动模型的基础。异步活动的执行模型可以只有一个单一的主]]></description>
</item><item>
    <title>基于进程的并行</title>
    <link>http://www.longtermbook.com/posts/%E5%9F%BA%E4%BA%8E%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%B9%B6%E8%A1%8C/</link>
    <pubDate>Tue, 27 Jul 2021 11:07:19 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/%E5%9F%BA%E4%BA%8E%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%B9%B6%E8%A1%8C/</guid>
    <description><![CDATA[1. 介绍 multiprocessing 是Python标准库中的模块，实现了共享内存机制，也就是说，可以让运行在不同处理器核心的进程能读取共享内存。 mpi4py 库实现了消息传递的编程]]></description>
</item><item>
    <title>基于线程的并行</title>
    <link>http://www.longtermbook.com/posts/%E5%9F%BA%E4%BA%8E%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%B9%B6%E8%A1%8C/</link>
    <pubDate>Tue, 27 Jul 2021 11:06:07 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/%E5%9F%BA%E4%BA%8E%E7%BA%BF%E7%A8%8B%E7%9A%84%E5%B9%B6%E8%A1%8C/</guid>
    <description><![CDATA[1. 线程介绍 目前，在软件应用中使用最广泛的并发编程范例是多线程。通常，一个应用有一个进程，分成多个独立的线程，并行运行、互相配合，执行不同类型]]></description>
</item><item>
    <title>认识并行计算</title>
    <link>http://www.longtermbook.com/posts/%E8%AE%A4%E8%AF%86%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/</link>
    <pubDate>Tue, 27 Jul 2021 11:04:16 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/%E8%AE%A4%E8%AF%86%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97/</guid>
    <description><![CDATA[1. 简介 解决一个大问题的一般方法是，将其拆分成若干小的、独立的问题，然后分别解它们。并行的程序也是使用这种方法，用多个处理器同时工作，来完成同]]></description>
</item><item>
    <title>Python函数式编程</title>
    <link>http://www.longtermbook.com/posts/python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</link>
    <pubDate>Thu, 03 Jun 2021 15:59:44 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/python%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B/</guid>
    <description><![CDATA[3种编程范式 命令式编程 Procedural programming is the most basic form of coding. Code is structured hierarchically into blocks (such as if statements, loops, and functions). It is arguably the simplest form of coding. However, it can be difficult to write and maintain large and complex software due to its lack of enforced structure. 1 2 3 4 5 6 7 8 def]]></description>
</item><item>
    <title>IntermediatePython</title>
    <link>http://www.longtermbook.com/posts/intermediatepython/</link>
    <pubDate>Sat, 15 May 2021 22:22:05 &#43;0800</pubDate>
    <author>Createitv</author>
    <guid>http://www.longtermbook.com/posts/intermediatepython/</guid>
    <description><![CDATA[IntermediatePython *args和**kwargs 并不是必须写成*args 和**kwargs。 只有变量前面的 *(星号)才是必须的. 你也可以写成*var 和**va]]></description>
</item></channel>
</rss>
